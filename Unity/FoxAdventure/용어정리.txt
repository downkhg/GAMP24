[유니티]
인스팩터:
게임:
씬:
하이라키:
게임오브젝트: 유니티 화면안에 있는 거
스프라이트: 여우의 이미지
컴포넌트: 트랜스폼, 스프라이트렌더러, 스크립트와 같은것
메세지: 콜백함수 OnTrigger/Collistion~ Start, Update
태그: 물체의 종류를 구별하려고 사용하는것
스프라이트에디터: 

[컴포넌트]
카메라:
트랜스폼: 위치,회전,크기를 변경할수 있는 컴포넌트.
스프라이트랜더러: 스프라이트 이미지를 보여주기 위한 컴포넌트.
스크립트: (여우:게임오브젝트,스프라이트)에 트랜스폼(컴포넌트)에 위치(포지션)값을 증가시켰다.
리지드바디(강체):
콜라이더:
ㄴ써클콜라이더
ㄴ박스콜라이더
ㄴ폴리곤콜라이더
ㄴ타일맵콜라이더
그리드:
ㄴTileMap:
ㄴTilemapRender:
프리팹:

[디자인패턴]
관리자클래스:


[스크립팅api]
AddForce:
OnGUI:

[컴퓨터공학]
객체:
ㄴ캡슐화를 통해서 만들어낸 대상(Class,Struct)
ㄴ클래스가 메모리 할당되어 만들어진(클래스변수)
ㄴ관찰하여 특징을 나타낼 어떤 대상
속성: 대상의 어떤 특징을 나타내는 값. 변수
동작: 대상의 어떤 행동을 통해 상태가 바뀌는 것. 함수

인스턴스:
전역변수:
지역변수:
매게변수:
static:
ㄴ클래스: c# 모든멤버를 static클래스로 구현함. 객체없이 함수를 호출할수있음. 마치 전역함수나 변수처럼 활용가능.
ㄴ지역변수: 함수가 끝나도 함수내부의 지역변수의 값을 유지함.
ㄴ변수: 객체없이 호출가능한 멤버 변수. 전역변수처럼 작동한다.
ㄴ함수: 객체없이 호출가능한 멤버 함수. c++처럼 함수를 객체없이 호출가능하도록 만든다. 이때 필요한 멤버는 static멤버변수나, 매개변수를 통해 받는다.
변수:
함수:
멤버함수: 클래스에 소속된 함수
멤버변수: 클래스에 소속된 변수
캡슐화: 객체에 데이터(변수)와 알고리즘(알고리즘)을 묶어서 만드는것.
상속: 부모의 멤버를 구현하지않고도 상속받아서 추가기능(변수,함수)를 구현하여 추가적인 기능을 만드는 것.
은닉: 객체지향에서 어떤 대상이 접근해야하는 함수나 변수를 제한하여 사용자에게 어떤 동작을 강제하도록하는것.
다형성: 추가적인 기능을 자식에서 재정의하여 같은 동작을 했지만 다르게 작동하도록 만드는것. 유니티에서 메세지함수를 호출하여 매개변수로 받은 대상이 어떤 콜라이더든, 충돌체크를하고 공통(이름이나, 태그를 확인함)적인 처리를 할수있다.
가상함수: 부모클래스에 키워드로 virtual선언하여 만드는 함수
가상함수테이블: 가상함수를 자식함수에서 오버로딩하면 오버라이딩한 함수의 함수포인터 자식의 가상함수의 포인터를 할당하여 부모객체에서 자식객체의 함수를 호출한다.
오버라이딩: 자식함수에서 부모함수의 가상함수를 재정의(오버라이딩)하여 정의하는 것.
오버로딩: 함수를 같은 이름으로 매개변수가 다르게 선언하는것.
콜백함수:  내가 호출하지않아도 어디에선가 호출되는 함수. 다형성, 가삼함수를 오버로딩하여 자식객체서 부모객체의 함수를 호출한다.
함수콜: 함수를 호출하여 사용하는것
함수포인터: 
동적바인딩(함수포인터를 이용하여 호출하거나, 가상함수를 이용하여 부모클래스에서 자식함수를 호출하는것): 프로그램이 실행하는 중에 할당된 메모리에 따라 달라짐.
정적바인딩(함수호출):
델리게이트: 

[단어] 새롭게 등장했지만 안써본것, 익숙하지않은 단어
Environment: 환경
Dynamic: 역동적인(움직이는대상)
Message: 상대방을 전달해서 변화하게 하는것 
